#!/bin/sh /etc/rc.common

START=90
APP=redsocks2
PID_FILE=/var/run/$APP.pid
ipset_blacklist="/etc/ipset/blacklist"
ipset_whitelist="/etc/ipset/whitelist"

start() {
	
	# HACK fd
	ulimit -n 4096
	
	config_load "$APP"
	local enabled localport proxytype autoproxy timeout proxyip proxyport whitelist_enabled blacklist_enabled
	
	config_get enabled config enabled
	[ "$enabled" = '0' ] && {
		stop
		return 0
	}

	config_get localport config localport
	config_get proxytype config proxytype
	config_get autoproxy config autoproxy 0
	config_get timeout config timeout 5
	config_get proxyip config proxyip
	config_get proxyport config proxyport
	config_get whitelist_enabled config whitelist_enabled
	config_get blacklist_enabled config blacklist_enabled

	localport2="9527"

	mkdir -p /var/etc

	if [ "$proxytype" = 'goagent' ]; then
		sed -e "s#|LOCALPORT1|#$localport#g" \
			-e "s#|LOCALPORT2|#$localport2#g" \
			-e "s#|AUTOPROXY|#$autoproxy#g" \
			-e "s#|TIMEOUT|#$timeout#g" \
			-e "s#|PROXYIP|#$proxyip#g" \
			-e "s#|PROXYPORT|#$proxyport#g" \
			/etc/redsocks2/redsocks2.goagent.conf.template > /var/etc/redsocks2.conf
	else
		sed -e "s#|LOCALPORT|#$localport#g" \
			-e "s#|PROXYTYPE|#$proxytype#g" \
			-e "s#|AUTOPROXY|#$autoproxy#g" \
			-e "s#|TIMEOUT|#$timeout#g" \
			-e "s#|PROXYIP|#$proxyip#g" \
			-e "s#|PROXYPORT|#$proxyport#g" \
			/etc/redsocks2/redsocks2.conf.template > /var/etc/redsocks2.conf
	fi

	service_start /usr/sbin/redsocks2 -c /var/etc/redsocks2.conf -p $PID_FILE

	remoteip="`ping -q -w1 $proxyip | grep PING | sed -e "s/).*//" | sed -e "s/.*(//"`"

	iptables -t nat -N REDSOCKS2
	iptables -t nat -A REDSOCKS2 -d 0.0.0.0/8 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 10.0.0.0/8 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 127.0.0.0/8 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 169.254.0.0/16 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 172.16.0.0/12 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 192.168.0.0/16 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 224.0.0.0/4 -j RETURN
	iptables -t nat -A REDSOCKS2 -d 240.0.0.0/4 -j RETURN
	iptables -t nat -A REDSOCKS2 -d "$remoteip" -j RETURN

	if [ "$whitelist_enabled" = '0' ] && [ "$blacklist_enabled" = '0' ]; then
		if [ "$proxytype" = 'goagent' ]; then
			iptables -t nat -A REDSOCKS2 -p tcp --dport 80 -j REDIRECT --to-ports "$localport"
			iptables -t nat -A REDSOCKS2 -p tcp --dport 443 -j REDIRECT --to-ports "$localport2"
		else
			iptables -t nat -A REDSOCKS2 -p tcp -j REDIRECT --to-ports "$localport"
		fi

	else

		[ "$blacklist_enabled" = '1' ] && {
			
			checkblacklist=$(ipset -L blacklist 2> /dev/null | wc -l)
			[ $checkblacklist -eq 0 -a -f "$ipset_blacklist" ] && {
				ipset -N blacklist nethash --hashsize 64
				for IP in $(cat $ipset_blacklist)
				do
					ipset -A blacklist $IP
				done
				iptables -t nat -A REDSOCKS2 -p tcp -m set --match-set blacklist src -j RETURN
			}
		}

		[ "$whitelist_enabled" = '1' ] && {
			
			checkwhitelist=$(ipset -L whitelist 2> /dev/null | wc -l)
			[ $checkwhitelist -eq 0 -a -f "$ipset_whitelist" ] && {
				ipset -N whitelist nethash --hashsize 4096
				for IP in $(cat $ipset_whitelist)
				do
					ipset -A whitelist $IP
				done	
				if [ "$proxytype" = 'goagent' ]; then
					iptables -t nat -A REDSOCKS2 -p tcp --dport 80 -m set ! --match-set whitelist dst -j REDIRECT --to-ports "$localport"
					iptables -t nat -A REDSOCKS2 -p tcp --dport 443 -m set ! --match-set whitelist dst -j REDIRECT --to-ports "$localport2"
				else
					iptables -t nat -A REDSOCKS2 -p tcp -m set ! --match-set whitelist dst -j REDIRECT --to-ports "$localport"
				fi
			}
		}
	fi
	iptables -t nat -I zone_lan_prerouting -j REDSOCKS2
}

stop() {
	service_stop /usr/sbin/redsocks2 && rm -rf $PID_FILE
	fw3 -q restart
	ipset destroy whitelist &> /dev/null
	ipset destroy blacklist &> /dev/null
}
